
URL: http://lists.w3.org/Archives/Public/www-rdf-logic/2001Apr/0016.html
<p> From: "Seth Russell" &lt;seth&#x40;&#0114;&#0111;&#0098;&#0117;&#0115;&#0116;&#0097;&#0105;&#0046;&#0110;&#0101;&#0116;&gt;
 From: "pat hayes" &lt;phayes&#x40;&#0097;&#0105;&#0046;&#0117;&#0119;&#0102;&#0046;&#0101;&#0100;&#0117;&gt;
 &gt;RDF &gt; triples have no special syntactic advantages over,
 say, LISP &gt; Sexpressions, and they provide no special functionality
 or semantic &gt; power. While I think this is doubtlessly true;
 since we can transform any triples diagram into sexpressions
 and visa versa without loss (can't we?); it would seem to me
 that there is an advantage in thir simplicity. Of course, the
 enthusiasm for the triples in the community at large is also
 an advantage, imho. There is no problem with considering triples
 as S-expressions. The problem is considering them as S-expressions
 *and* as a formal descriptive language simultaneously. Suppose
 someone suggests the use of Unicode as a formal language, along
 the following lines. Let the letter "l" stand for "lives in."
 Let "W" stand for George W. Bush. Let "D" stand for Washington,
 D.C. Let "T" stand for Tony Blair, and "L" for London. Let "t"
 stand for `taller than.' And so forth. Make sure every printing
 character is assigned a meaning. Now take any string and divide
 it into groups of three characters, and assign to "pqr" the
 meaning "the relation denoted by p holds between the object
 denoted by q and the object denoted by r." The whole string
 then stands for the conjunction of the propositions denoted
 by the letter triples. So the string "lWDlTLtTW" means "George
 W. Bush lives in Washington, D.C., Tony Blair lives in London,
 and Tony Blair is taller than George W. Bush." Call this scheme
 URF, for "Unicode Representation Format." Now suppose I argue
 that URF isn't a very powerful language, for reasons that I
 hardly need to enumerate. It would be frustrating if the pro-URF
 faction comes back with the rejoinder, "What do you mean, it
 isn't very powerful? You can represent *anything* in Unicode,
 can't you? Isn't it useful to have a `common exchange protocol'?"
 This may sound like a parody, but to me statements such as this
 one by Seth seem to be of exactly this type: Inferencing is
 an application that sits on top of the triples ... let the best
 one win. I fail to see how this is an argument against simply
 using triples. In my URF world, couldn't I say Inferencing is
 an application that sits on top of the Unicode ... let the best
 one win. I fail to see how this is an argument against simply
 using Unicode. The point is that no one is arguing against using
 Unicode or RDF as a coding scheme; the argument is against using
 either as a formal language. If RDF is simply an encoding scheme,
 then we can put it on the back burner and focus on the language
 actually being encoded. If we view it *as a formal language*,
 then its flaws loom large. It lacks many key features, including
 implication and bound variables. Actually, I am not convinced
 that it's such a great encoding scheme. I am told it goes beyond
 XML in some important ways, but I'm not sure what they are.
 &gt;The RDF documentation and discussion archives are rife with
 &gt; elementary errors (such as confusing use and mention, confusing
 &gt; syntactic structure with meta-description, confusing asserting
 with &gt; reference, confusing names with URIs, and confusing
 dereferencing &gt; with denotation) that they often border on
 being simply incompetent. Hey man! ...then give us a hand ...
 As I have argued before, I don't think it would be particularly
 difficult to fix the problems with RDF. However, fixing them
 would require thinking of an RDF expression as a self-contained
 textual object, which seems to be incompatible with thinking
 of it as a piece of a graph, and therefore incompatible with
 the triples model. I think this is where we're stuck. -- Drew
 McDermott 



